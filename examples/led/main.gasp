app led {
  key: "bdde6db9f3daf38f3a",
  token: "14b61d617a9c428a95542dbd097d7a0e"
}

init {=code
#define GL_SERIAL Serial
#define DEBUG_SERIAL Serial
code=}

setup {=code
    GL_SERIAL.begin(115200);
    while (!GL_SERIAL) {;}
code=}

attr led_state {
  type: "int",
  max: 1,
  min: 0,
  gen_set: false
}

func toggle_led {=code
    toggle_gpio_blinker();
    get_attr_led_state(retval);
code=}


func open_led {=code
    attr_led_state = HIGH;
    get_attr_led_state(retval);
code=}


func close_led {=code
    attr_led_state = LOW;
    get_attr_led_state(retval);
code=}

command toggle {
  fn: toggle_led,
  doc: {=md
### Toggle led

@Command:

```
{
    "method": "toggle"
}
```

@Return:

```
{
    "led_state": 0
}
```
md=}
}

command open {
  fn: open_led,
  doc: {=md
### Open led

@Command:

```
{
    "method": "open"
}
```

@Return:

```
{
    "led_state": 1
}
```
md=}
}

command close {
  fn: close_led,
  doc: {=md
### Close led

@Command:

```
{
    "method": "close"
}
```

@Return:

```
{
    "led_state": 0
}
```
md=}
}

gpio blinker {
    pin: "LED_BUILTIN",
    link: led_state,
    state: LOW
}

gpio button {
    pin: "12",
    fn: toggle_gpio_blinker,
    state: HIGH,
    emit: LOW
}
