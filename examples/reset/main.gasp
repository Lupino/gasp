app reset {
  key: "bdde6db9f3daf38f3a",
  token: "14b61d617a9c428a95542dbd097d7a0e"
}

init {
#define GL_SERIAL Serial
#define DEBUG_SERIAL Serial
}

setup {
    GL_SERIAL.begin(115200);
    while (!GL_SERIAL) {;}
}

init {
int blink_state = LOW;
}

setup {
    pinMode(LED_BUILTIN, OUTPUT);
}

func toggle_blink {
    if (blink_state == LOW) {
        blink_state = HIGH;
    } else {
        blink_state = LOW;
    }
    digitalWrite(LED_BUILTIN, blink_state);
}

every toggle_blink 1000

init {
#include <avr/wdt.h>
bool want_reboot = false;
#define PING_FAILED_CB reset
}

setup {
    // wdt init
    MCUSR = 0;
    wdt_disable();
    wdt_enable(WDTO_8S);
    // end wdt init
}

loop {
    wdt_reset();
    if (want_reboot) {
        reset();
    }
}

func reset {
    wdt_disable();
    wdt_enable(WDTO_15MS);
    for (;;) {

    }
}

func reset_system {
    want_reboot = true;
}

command reset_system {
    fn: reset_system
}
